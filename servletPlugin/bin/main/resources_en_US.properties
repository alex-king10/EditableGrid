#DocumentVectorDatabaseCS.name = Document Vector Database
#DocumentVectorDatabaseCS.description= Connected system to store the PDF documents as vectors in a database and enables us to query from it. Includes the Client APIs for the AI Knowledge Assistant component.
#
##============ VERSION 1 ==================
#OpenAICS.name = OpenAI Services
#OpenAICS.description = Use OpenAI for Embeddings and Chat Completions.
#
#
#AzureCS.name = Azure OpenAI Services
#AzureCS.description = Use Azure OpenAI Service for Embeddings and Chat Completions.
#
#
#CreateEmbeddingsDocumentIntegrationTemplate.name = Upload Document
#CreateEmbeddingsDocumentIntegrationTemplate.description = This integration vectorizes and stores the document in a native Appian vector database. After uploading the document, use the "Query Documents" or "Generate Response" integration to semantically search the document.
#
#GetDocumentDetailsFromDatabaseFileIntegrationTemplate.name = List Documents
#GetDocumentDetailsFromDatabaseFileIntegrationTemplate.description = This integration lists the names and IDs of the documents stored in the vector database.
#
#DatabaseDocumentOperationsIntegrationTemplate.name = Database Operations
#DatabaseDocumentOperationsIntegrationTemplate.description = This integration performs the following database operations on the vector database: Delete Documents and Change Database Password.
#
#QueryDocumentsFromDatabaseFileIntegrationTemplate.name = Query Documents
#QueryDocumentsFromDatabaseFileIntegrationTemplate.description = This integration semantically searches the documents in the vector database and finds the most relevant matches to the query.
#
#GenerateResponseIntegrationTemplate.name = Generate Response
#GenerateResponseIntegrationTemplate.description = This integration semantically searches the documents in the vector database and finds the most relevant matches to the query. It then prepends this document information to the user?s query and sends it to an OpenAI completion model. OpenAI will provide the answer to the query using the relevant document information.
#
#
##============ VERSION 2 ==================
#
#OpenAICS2.name= OpenAI Services
#OpenAICS2.description = Use OpenAI for Embeddings and Chat Completions.
#
#AzureCS2.name= Azure OpenAI Services
#AzureCS2.description =  Use Azure OpenAI Service for Embeddings and Chat Completions.
#
#CreateEmbeddingsDocumentIntegrationTemplate2.name = Upload Document
#CreateEmbeddingsDocumentIntegrationTemplate2.description = This integration vectorizes and stores the document in a native Appian vector database. After uploading the document, use the "Query Documents" or "Generate Response" integration to semantically search the document.
#
#GetDocumentDetailsFromDatabaseFileIntegrationTemplate2.name = List Documents
#GetDocumentDetailsFromDatabaseFileIntegrationTemplate2.description = This integration lists the names and IDs of the documents stored in the vector database.
#
#DatabaseDocumentOperationsIntegrationTemplate2.name = Database Operations
#DatabaseDocumentOperationsIntegrationTemplate2.description = This integration performs the following database operations on the vector database: Delete Documents and Change Database Password.
#
#QueryDocumentsFromDatabaseFileIntegrationTemplate2.name = Query Documents
#QueryDocumentsFromDatabaseFileIntegrationTemplate2.description = This integration semantically searches the documents in the vector database and finds the most relevant matches to the query.
#
#GenerateResponseIntegrationTemplate2.name = Generate Response
#GenerateResponseIntegrationTemplate2.description = This integration semantically searches the documents in the vector database and finds the most relevant matches to the query. It then prepends this document information to the user?s query and sends it to an OpenAI completion model. OpenAI will provide the answer to the query using the relevant document information.
#
#
##============ VERSION 3 ==================
#OpenAICS3.name= OpenAI Services
#OpenAICS3.description = Use OpenAI for Embeddings and Chat Completions.
#
#AzureCS3.name= Azure OpenAI Services
#AzureCS3.description =  Use Azure OpenAI Service for Embeddings and Chat Completions.
#
#CreateEmbeddingsDocumentIntegrationTemplate3.name = Upload Document
#CreateEmbeddingsDocumentIntegrationTemplate3.description = This integration vectorizes and stores the document in a native Appian vector database. After uploading the document, use the "Query Documents" or "Generate Response" integration to semantically search the document.
#
#GetDocumentDetailsFromDatabaseFileIntegrationTemplate3.name = List Documents
#GetDocumentDetailsFromDatabaseFileIntegrationTemplate3.description = This integration lists the names and IDs of the documents stored in the vector database.
#
#DatabaseDocumentOperationsIntegrationTemplate3.name = Database Operations
#DatabaseDocumentOperationsIntegrationTemplate3.description = This integration performs the following database operations on the vector database: Delete Documents and Change Database Password.
#
#QueryDocumentsFromDatabaseFileIntegrationTemplate3.name = Query Documents
#QueryDocumentsFromDatabaseFileIntegrationTemplate3.description = This integration semantically searches the documents in the vector database and finds the most relevant matches to the query.
#
#GenerateResponseIntegrationTemplate3.name = Generate Response
#GenerateResponseIntegrationTemplate3.description = This integration semantically searches the documents in the vector database and finds the most relevant matches to the query. It then prepends this document information to the user?s query and sends it to an OpenAI completion model. OpenAI will provide the answer to the query using the relevant document information.
#
#GroupingIntegrationTemplate.name = Group Text
#GroupingIntegrationTemplate.description = Groups the given List of Text into the provided List of Categories based on relevancy.
